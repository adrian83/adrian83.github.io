<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on adrian</title>
    <link>https://adrian83.github.io/post/</link>
    <description>Recent content in Posts on adrian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 27 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://adrian83.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Run code in Docker container</title>
      <link>https://adrian83.github.io/post/003_run_code_in_docker_container/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://adrian83.github.io/post/003_run_code_in_docker_container/</guid>
      <description>Running your code inside of Docker container can save you from installing, sometimes very complex, tree of dependencies on your local computer. Introduction Following post presents a few steps, that will allow you to run your applications / scripts in an interactive way inside the Docker container.
First let&amp;rsquo;s look at the general command for running Docker containers:
docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]
Using this commmand we can run our first example which in this case is echo command:</description>
    </item>
    
    <item>
      <title>Go (Golang) and JSON</title>
      <link>https://adrian83.github.io/post/002_go_and_json/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://adrian83.github.io/post/002_go_and_json/</guid>
      <description>Transforming data structures into JSON and the other way around is something, that is done quite often when creating APIs. Below you can find a few, in my opinion, most frequent transformations to and from JSON written in Go programming language. The simplest cases are, when JSON and Go structures are very similar and can be mapped without any additional manipulations. Marshaling Go structures into JSON, when corresponding fields have compatible types.</description>
    </item>
    
    <item>
      <title>Running Dashboard in Minikube</title>
      <link>https://adrian83.github.io/post/001_minikube-dashboard/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://adrian83.github.io/post/001_minikube-dashboard/</guid>
      <description>To install and access Kubernetes Web UI (called Dashboard), you need to go through few simple steps. Make sure your Minikube cluster is started by running minikube status.
If it is not running start it with minikube start.
First we have to define user, that will have permission to access Dashboard. For that create file dashboard-adminuser.yaml with content:
apiVersion: v1 kind: ServiceAccount metadata: name: admin-user namespace: kubernetes-dashboard Next we need to bind previously defined user to role, which will allow accessing dashboard.</description>
    </item>
    
    <item>
      <title>Just a test</title>
      <link>https://adrian83.github.io/post/000_test/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://adrian83.github.io/post/000_test/</guid>
      <description>TEST </description>
    </item>
    
  </channel>
</rss>